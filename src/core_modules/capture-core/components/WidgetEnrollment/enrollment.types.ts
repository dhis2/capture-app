export type EventReducerProps = {
    enrollments?: Array<Record<string, unknown>> | null;
    events: Array<any>;
};

export type Props = {
    teiId: string;
    enrollmentId: string;
    programId: string;
    readOnlyMode?: boolean;
    externalData: { status: { value: string | null }; events?: Array<Record<string, unknown>> | null };
    onDelete: () => void;
    onAddNew: () => void;
    onUpdateEnrollmentDate?: (enrollmentDate: string) => void;
    onUpdateIncidentDate?: (enrollmentDate: string) => void;
    onError?: (message: string) => void;
    onSuccess?: () => void;
    onUpdateEnrollmentStatus?: (enrollment: Record<string, unknown>) => void;
    onUpdateEnrollmentStatusSuccess?: (params: { redirect?: boolean }) => void;
    onUpdateEnrollmentStatusError?: (message: string) => void;
    onAccessLostFromTransfer?: () => void;
};

export type PlainProps = {
    enrollment: Record<string, unknown>;
    events: Array<{ status: string; event: string; programStage: string }>;
    program: Record<string, unknown>;
    ownerOrgUnit: Record<string, unknown>;
    locale: string;
    refetchEnrollment: any;
    refetchTEI: any;
    initError?: any;
    loading: boolean;
    canAddNew: boolean;
    editDateEnabled: boolean;
    displayAutoGeneratedEventWarning: boolean;
    updateEnrollmentDate: (enrollmentDate: string) => void;
    updateIncidentDate: (incidentDate: string) => void;
    onDelete: () => void;
    onAddNew: () => void;
    onError?: (message: string) => void;
    onSuccess?: () => void;
    onUpdateEnrollmentStatus?: (enrollment: Record<string, unknown>) => void;
    onUpdateEnrollmentStatusSuccess?: (params: { redirect?: boolean }) => void;
    onUpdateEnrollmentStatusError?: (message: string) => void;
    onAccessLostFromTransfer?: () => void;
    classes: Record<string, string>;
};
