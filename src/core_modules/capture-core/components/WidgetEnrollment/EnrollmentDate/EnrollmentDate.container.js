// @flow
import React, { useState, useCallback } from 'react';
import { useDataMutation, type QueryRefetchFunction } from '@dhis2/app-runtime';
import { EnrollmentDateComponent } from './EnrollmentDate.component';
import { convertValue as convertValueServerToClient } from '../../../converters/serverToClient';
import { convertValue as convertValueClientToServer } from '../../../converters/clientToServer';
import { dataElementTypes } from '../../../metaData';

type Props = {
    enrollmentDateLabel: string,
    enrollment: any,
    editEnabled: boolean,
    displayAutoGeneratedEventWarning: boolean,
    onUpdateDate?: (enrollmentDate: string) => void,
    ...CssClasses,
}

const enrollmentUpdate = {
    resource: 'tracker?async=false&importStrategy=UPDATE',
    type: 'create',
    data: enrollment => ({
        enrollments: [enrollment],
    }),
};

export const EnrollmentDate = ({
    enrollmentDateLabel,
    enrollment,
    editEnabled,
    displayAutoGeneratedEventWarning,
    onUpdateDate,
    classes,
}: Props) => {
    const [updateMutation] = useDataMutation(enrollmentUpdate);

    const saveHandler = (selectedDate: string) => {
        enrollment.enrolledAt = convertValueClientToServer(selectedDate, dataElementTypes.DATE);
        updateMutation(enrollment);
        onUpdateDate && onUpdateDate(enrollment.enrolledAt);
    };
    const clientDate = String(convertValueServerToClient(enrollment.enrolledAt, dataElementTypes.DATE));

    return <EnrollmentDateComponent
        enrollmentDateLabel={enrollmentDateLabel}
        enrollmentDate={clientDate}
        editEnabled={editEnabled}
        displayAutoGeneratedEventWarning={displayAutoGeneratedEventWarning}
        onSave={saveHandler}
        classes={classes}
    />
};
