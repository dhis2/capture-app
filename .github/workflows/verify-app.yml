name: 'dhis2: verify app'

on:
  push:
    branches:

env:
  GIT_AUTHOR_NAME: '@dhis2-bot'
  GIT_AUTHOR_EMAIL: 'apps@dhis2.org'
  GIT_COMMITTER_NAME: '@dhis2-bot'
  GIT_COMMITTER_EMAIL: 'apps@dhis2.org'
  GH_TOKEN: ${{secrets.DHIS2_BOT_GITHUB_TOKEN}}
  CI: true

jobs:
  install:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

  lint:
    runs-on: ubuntu-latest
    needs: install
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Lint
        run: yarn linter:check

  flow:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    needs: install
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Flow
        run: yarn flow:check

  unit-tests: 
    runs-on: ubuntu-latest
    needs: install
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Unit tests
        run: yarn test

  cypress:
    runs-on: ubuntu-latest
    needs: install
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    container: cypress/browsers:node14.7.0-chrome84
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        containers: [1, 2, 3, 4]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1 
        with:
          node-version: 14.x

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          record: true
          parallel: true
          group: e2e-chrome-parallel
          browser: chrome
          start: 'yarn start:forCypress'
          wait-on: 'http://localhost:3000'
          # wait for 200 secs for the server to respond
          wait-on-timeout: 200
        env:
          CI: true
          CYPRESS_RECORD_KEY: '6b0bce0d-a4e8-417b-bbee-9157cbe9a999'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: [lint,flow,unit-tests,cypress]
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Build
        run: yarn build

      - uses: actions/upload-artifact@v2
        with:
          name: app-build
          path: |
            **/build
            !**/node_modules
          retention-days: 1

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{env.GH_TOKEN}}

      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - uses: actions/download-artifact@v2
        with:
          name: app-build

      - uses: dhis2/deploy-build@master
        with:
          build-dir: build/app
          github-token: ${{ env.GH_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: publish
    if: "github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{env.GH_TOKEN}}

      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Publish release to GitHub
        run: npx @dhis2/cli-utils release